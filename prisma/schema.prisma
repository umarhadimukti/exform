// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


/*
  @model - struktur model
**/
enum Status {
  ACTIVE
  INACTIVE
}
model Role {
  id          Int      @default(autoincrement()) @id
  name        String
  description String?
  users       User[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("roles")
}
model User {
  id         Int @id @default(autoincrement())
  email      String @unique
  first_name String
  last_name  String?
  password   String
  status     Status @default(ACTIVE)
  role_id    Int
  role       Role @relation(fields: [role_id], references: [id])
  forms      Form[]
  answers    Answer[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}
model Form {
  id          Int @id @default(autoincrement())
  title       String
  description String?
  is_public   Boolean @default(true)
  invites     String[]
  user_id     Int
  user        User @relation(fields: [user_id], references: [id])
  questions   Question[]
  answers     Answer[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("forms")
}
model Question {
  id         Int @id @default(autoincrement())
  type       String
  question   String
  options    Json
  required   Boolean
  form_id    Int
  answers    Answer[]
  form       Form @relation(fields: [form_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("questions")
}
model Answer {
  id          Int @id @default(autoincrement())
  user_id     Int
  form_id     Int
  question_id Int
  user        User @relation(fields: [user_id], references: [id])
  form        Form @relation(fields: [form_id], references: [id])
  question    Question @relation(fields: [question_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("answers")
}